package demo;

public class Constant {

	// ================ Simulation Parameters ==============//

	public final static boolean ENABLE_OUTPUT = true;
	public final static boolean OUTPUT_CSV = false;
	public final static double SCHEDULING_INTERVAL = 300;
	//set SIMULATION_LIMIT for one day
	public final static double SIMULATION_LIMIT = 24 * 60 * 60;
	
	
	
	
	
	// ================== Users Parameters =================//

	//Set the number of user and the time that they created, start from 0 and leave at least one SCHEDULING_INTERVAL between them (in seconds) (buggy)
	public final static double[] USERS_DELAY = { user1_time , user2_time};

	// The Types of the VM broker has (starts from 0)
	public final static int[][] USR_TYPE_OWNED = { { user1_VMTYPE0, user1_VMTYPE1, user1_VMTYPE2,user1_VMTYPE3 }, { user2_VMTYPE3,user1_VMTYPE0, user2_VMTYPE1 } };
	
	// The Amount of the VM broker has
	public final static int[][] USR_VMNUM_OWNED = { { user1_VMTYPE0_AMMOUNT, user1_VMTYPE1_AMMOUNT,user1_VMTYPE2_AMMOUNT,user1_VMTYPE3_AMMOUNT }, {user2_VMTYPE3_AMMOUNT,user1_VMTYPE0_AMMOUNT , user2_VMTYPE1_AMMOUNT } };
	
	// The Types of the Cloudlets broker has (starts from 0)
	public final static int[][] USR_CLOUDLET_TYPE = { { user1_CLOUDLETTYPE0,user1_CLOUDLETTYPE2, user1_CLOUDLETTYPE0, user1_CLOUDLETTYPE3 }, { user1_CLOUDLETTYPE2,user2_CLOUDLETTYPE0, user2_CLOUDLETTYPE3 } };

	
	
	
	// ================ Cloudlet Parameters =================//

	//This is the instructions length that VM is going to process
	//This cloulet will be executed until SIMULATION_LIMIT
//	public final static int CLOUDLET_LENGTH[] = { (int) (100000*SIMULATION_LIMIT), (int) (20000*SIMULATION_LIMIT), (int) (3000*SIMULATION_LIMIT), (int) (3000*SIMULATION_LIMIT), (int) (3000*SIMULATION_LIMIT) };// * (int) SIMULATION_LIMIT;
	
	//insert the instructions length of the cloudlets {cloudlet_type0, cloudlet_type1,cloudlet_type2,cloudlet_type3}
	public final static int CLOUDLET_LENGTH[] = { cloudlet_IL0, cloudlet_IL1, cloudlet_IL2,cloudlet_IL3};// * (int) SIMULATION_LIMIT;
	public final static int CLOUDLET_FILESIZE[] = { cloudlet_IFZ0, cloudlet_IFZ1, cloudlet_IFZ2, cloudlet_IFZ3 };
	public final static int CLOUDLET_OUTPUTSIZE[] = { cloudlet_OFZ0, cloudlet_OFZ1, cloudlet_OFZ2, cloudlet_OFZ3 };
	public final static int CLOUDLET_PES[] = { cloudlet_PES0, cloudlet_PES2, cloudlet_PES2, cloudlet_PES3 };
	// 1 Time Shared
	// 2 Space Shared *
	// 3 SchedulerDynamicWorkload *
//	public final static int[] CLOUD_ALLOCATION = { 1,1,1,1 };
//	public final static int[] CLOUD_ALLOCATION = { 2,2,2,2 };
	public final static int[] CLOUD_ALLOCATION = { 3,3,3,3 };
	
	//This is for random utilization (requires TimeSharedOverSubscription & SchedulerDynamicWorkload) (buggy)
	public final static long RANDOM_UTILIZATION = 0 ; //Set to 1
	public final static long CLOUDLET_UTILIZATION_SEED[] = { 1, 1, 1, 1 };
	
	


	// ================== Host Parameters =================//
	public final static int HOST_TYPES = 5;
	public final static int[] VM_HOST_NUMBERS = { 10,10, 10, 10,10 };
	public final static int[] HOST_MIPS = { 1000, 1500, 2200, 6000, 4200 };
	public final static int[] HOST_PES = { 1, 1, 2, 4, 4 };
	public final static int[] HOST_MAX_POWER = { 80, 120, 150, 162, 130 };
	public final static double[] HOST_MAX_POWER_PERCENT = { 0.3, 0.3, 0.3, 0.3,0.3 };
//	public final static double[] HOST_MIN_UTIL = { 0.3, 0.3, 0.3, 0.3, 0.3 };//this is minimun mips for minimun power
	public final static double[] HOST_MIN_UTIL = { -1,-1,-1, -1, -1 };//disable

	public final static int[] HOST_RAM = { 24576, 24576, 24576, 24576, 24576 };
	public final static int HOST_BW = 1000000; // 1 Gbit/s
	public final static int HOST_STORAGE = 1000000000; // 1 TB

	// 1 Time Shared * 
	// 2 Space Shared
	// 3 TimeSharedOverSubscription <2>
	public final static int[] VM_ALLOCATION = { 1,1,1, 1,1 };
//	public final static int[] VM_ALLOCATION = { 2,2,2,2,2 };
//	public final static int[] VM_ALLOCATION = { 3,3,3, 3,3 };



	// ================== VM Parameters =================//

	public final static int[] VM_MIPS = { 750, 1000, 1500, 2000 };
	public final static int[] VM_PES = { 1, 1, 1, 1 };
	public final static int[] VM_RAM = { 2048, 2048, 2048, 2048 };
	public final static int VM_BW = 1000;
	public final static int VM_SIZE = 25000; // 2.5 GB
	
	
	// ============== Diagrams Parameters ===============//

	public final static int SCALEX =60*60;
	public final static int STEP_INTERVAL =10;
	public final static int MAXPOWERS =162;

}
